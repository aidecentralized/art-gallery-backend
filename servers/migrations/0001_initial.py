# Generated by Django 5.1.7 on 2025-03-26 00:27

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('provider', models.CharField(max_length=255)),
                ('url', models.URLField()),
                ('documentation_url', models.URLField(blank=True, null=True)),
                ('types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('agent', 'Agent'), ('resource', 'Resource'), ('tool', 'Tool')], max_length=10), default=list, size=None)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='server_logos/')),
                ('verified', models.BooleanField(default=False)),
                ('rating', models.FloatField(default=0.0)),
                ('uptime', models.FloatField(default=100.0)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('protocols', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('is_active', models.BooleanField(default=True)),
                ('last_checked', models.DateTimeField(auto_now_add=True)),
                ('status_message', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_servers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServerCapability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('agent', 'Agent'), ('resource', 'Resource'), ('tool', 'Tool')], max_length=10)),
                ('examples', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capabilities', to='servers.server')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CapabilityParameter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('type', models.CharField(max_length=50)),
                ('required', models.BooleanField(default=False)),
                ('default', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('capability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='servers.servercapability')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServerRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField()),
                ('review', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='servers.server')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UsageRequirements',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('authentication_required', models.BooleanField(default=False)),
                ('authentication_type', models.CharField(choices=[('none', 'None'), ('api_key', 'API Key'), ('oauth2', 'OAuth 2.0'), ('jwt', 'JWT'), ('other', 'Other')], default='none', max_length=10)),
                ('rate_limits', models.CharField(blank=True, max_length=255, null=True)),
                ('pricing', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='usage_requirements', to='servers.server')),
            ],
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['slug'], name='servers_ser_slug_4f4b57_idx'),
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['owner'], name='servers_ser_owner_i_2de82c_idx'),
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['verified'], name='servers_ser_verifie_a8ad8d_idx'),
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['created_at'], name='servers_ser_created_ee67df_idx'),
        ),
        migrations.AddIndex(
            model_name='servercapability',
            index=models.Index(fields=['server', 'name'], name='servers_ser_server__18488f_idx'),
        ),
        migrations.AddIndex(
            model_name='servercapability',
            index=models.Index(fields=['type'], name='servers_ser_type_6cf4cb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='servercapability',
            unique_together={('server', 'name')},
        ),
        migrations.AddIndex(
            model_name='capabilityparameter',
            index=models.Index(fields=['capability'], name='servers_cap_capabil_92d7dd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='capabilityparameter',
            unique_together={('capability', 'name')},
        ),
        migrations.AddIndex(
            model_name='serverrating',
            index=models.Index(fields=['server'], name='servers_ser_server__2827bd_idx'),
        ),
        migrations.AddIndex(
            model_name='serverrating',
            index=models.Index(fields=['user'], name='servers_ser_user_id_2efde9_idx'),
        ),
        migrations.AddIndex(
            model_name='serverrating',
            index=models.Index(fields=['rating'], name='servers_ser_rating_2986d3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='serverrating',
            unique_together={('server', 'user')},
        ),
    ]
